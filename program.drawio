<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;libs.python.program.Program&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; input_file: &lt;br/&gt; _instruction_next_index: &lt;br/&gt; input_close: &lt;br/&gt; _exit_code: &lt;br/&gt; _data_stack: &lt;br/&gt; _frame_temp: &lt;br/&gt; _frame_local: &lt;br/&gt; _labels: &lt;br/&gt; instructions: &lt;br/&gt; _frame_global: &lt;br/&gt; _frame_local: &lt;br/&gt; _frame_temp: &lt;br/&gt; _frame_stack: &lt;br/&gt; _data_stack: &lt;br/&gt; _call_stack: &lt;br/&gt; _instruction_executed: &lt;br/&gt; _instruction_next_index: &lt;br/&gt; _exit_code: &lt;br/&gt; input_file: &lt;br/&gt; input_close: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; Program.DataType: &lt;br/&gt; Program._Frame: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; __init__(self, input=None): &lt;br/&gt; __del__(self): &lt;br/&gt; var_define(self, var, type=None, value=None): &lt;br/&gt; var_set(self, var, type, value): &lt;br/&gt; var_get(self, var, must=False): &lt;br/&gt; var_is_defined(self, var): &lt;br/&gt; var_is_initialized(self, var): &lt;br/&gt; label_create(self, label, index): &lt;br/&gt; label_get_index(self, label): &lt;br/&gt; label_is_defined(self, label): &lt;br/&gt; frame_create(self): &lt;br/&gt; frame_push(self): &lt;br/&gt; frame_pop(self): &lt;br/&gt; call_stack_push(self, index): &lt;br/&gt; call_stack_pop(self): &lt;br/&gt; data_stack_push(self, type, value): &lt;br/&gt; data_stack_pop(self): &lt;br/&gt; data_stack_clear(self): &lt;br/&gt; instruction_counter_inc(self): &lt;br/&gt; instruction_counter_set(self, index): &lt;br/&gt; instruction_counter_get(self): &lt;br/&gt; instructions_executed(self): &lt;br/&gt; instruction_add(self, instruction): &lt;br/&gt; instructions_count(self): &lt;br/&gt; execute(self): &lt;br/&gt; exit(self, code): &lt;br/&gt; get_exit_code(self): &lt;br/&gt; get_status(self): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-138" y="148" width="275" height="1134" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;object&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; __doc__: &lt;br/&gt; __dict__: &lt;br/&gt; __slots__: &lt;br/&gt; __module__: &lt;br/&gt; __annotations__: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; __class__(self: _T): &lt;br/&gt; __class__(self, __type: Type[object]): &lt;br/&gt; __init__(self): &lt;br/&gt; __new__(cls: Type[_T]): &lt;br/&gt; __setattr__(self, name: str, value: Any): &lt;br/&gt; __eq__(self, o: object): &lt;br/&gt; __ne__(self, o: object): &lt;br/&gt; __str__(self): &lt;br/&gt; __repr__(self): &lt;br/&gt; __hash__(self): &lt;br/&gt; __format__(self, format_spec: str): &lt;br/&gt; __getattribute__(self, name: str): &lt;br/&gt; __delattr__(self, name: str): &lt;br/&gt; __sizeof__(self): &lt;br/&gt; __reduce__(self): &lt;br/&gt; __reduce_ex__(self, protocol: SupportsIndex): &lt;br/&gt; __reduce_ex__(self, protocol: int): &lt;br/&gt; __dir__(self): &lt;br/&gt; __init_subclass__(cls): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-134" y="-463" width="268" height="561" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;typing.Hashable&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; __hash__(self): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-72" y="-567" width="143" height="58" as="geometry" />
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node0" target="node2" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=block;startSize=12;endArrow=none;strokeColor=#595959;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node2" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=block;startSize=12;endArrow=none;strokeColor=#595959;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.001;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>